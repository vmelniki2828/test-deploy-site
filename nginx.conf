events {
    worker_connections 1024;
}

http {
    server {
        listen 80;
        server_name chat.cat-tools.com;
        return 301 https://$host$request_uri;  # Перенаправление всех HTTP запросов на HTTPS
    }

    server {
        listen 443 ssl;
        server_name chat.cat-tools.com;

        ssl_certificate /etc/letsencrypt/live/chat.cat-tools.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/chat.cat-tools.com/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
            proxy_pass http://frontend:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/ {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /socket.io/ {
            proxy_pass http://backend:8000;  # Replace with your WebSocket backend service
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade; # Disable caching for WebSocket connections
        }

        location /widget-bundle.js {
            alias /usr/share/nginx/html/widget-bundle.js;
        }
    }
}